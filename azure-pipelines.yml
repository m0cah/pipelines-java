# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

strategy:
  matrix:
    linux_10:
      imageName: "ubuntu-latest"
      jdkVersion: "1.10"
    mac_10:
      imageName: "macOS-latest"
      jdkVersion: "1.10"
    windows_10:
      imageName: "windows-latest"
      jdkVersion: "1.10"
    linux_11:
      imageName: "ubuntu-latest"
      jdkVersion: "1.11"
    mac_11:
      imageName: "macOS-latest"
      jdkVersion: "1.11"
    windows_11:
      imageName: "windows-latest"
      jdkVersion: "1.11"
  maxParallel: 6

pool:
  vmImage: $(imageName)
steps:
# - task: Maven@3
#   inputs:
#     mavenPomFile: 'pom.xml'
#     mavenOptions: '-Xmx3072m'
#     javaHomeOption: 'JDKVersion'
#     jdkVersionOption: $(jdkVersion)
#     jdkArchitectureOption: 'x64'
#     publishJUnitResults: true
#     testResultsFiles: '**/surefire-reports/TEST-*.xml'
#     goals: 'package'

- pwsh: 'echo "Hello World!"'
